/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package teste;

import br.com.senac.integrador.escola.modelos.telas.tela_aluno.*;
import br.com.senac.integrador.escola.modelos.auxiliares.LoginSessionAlunos;
import java.awt.Color;
import java.awt.Font;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jonathan
 */
public class page_desempenho extends javax.swing.JInternalFrame {

    DefaultTableModel model_disciplina;
    DefaultTableModel model_desempenho;
    
    /**
     * Creates new form Inicio
     */
    public page_desempenho() throws SQLException {
        initComponents();
        
        model_disciplina = (DefaultTableModel) table_disciplina.getModel();  
        model_desempenho = (DefaultTableModel) table_desempenho.getModel();  
              
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI bi = (BasicInternalFrameUI) this.getUI();
        bi.setNorthPane(null);

        fillDesempenho();
        fillDisciplina(1,LoginSessionAlunos.idEstudante,1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tab_inicio = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        table_disciplina = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        table_desempenho = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        combo_trimestre = new javax.swing.JComboBox<>();

        setBorder(null);
        setPreferredSize(new java.awt.Dimension(590, 480));

        tab_inicio.setBackground(new java.awt.Color(67, 148, 222));
        tab_inicio.setPreferredSize(new java.awt.Dimension(590, 480));

        table_disciplina.setFont(new java.awt.Font("Segoe UI Semibold", 1, 10)); // NOI18N
        table_disciplina.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Disciplina", "Tipo", "Data", "Nota"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_disciplina.setToolTipText("");
        table_disciplina.setFocusable(false);
        table_disciplina.setGridColor(new java.awt.Color(0, 0, 0));
        table_disciplina.setIntercellSpacing(new java.awt.Dimension(0, 0));
        table_disciplina.setPreferredSize(new java.awt.Dimension(278, 287));
        table_disciplina.setRowHeight(20);
        table_disciplina.setSelectionBackground(new java.awt.Color(232, 180, 88));
        table_disciplina.setShowGrid(true);
        table_disciplina.setShowHorizontalLines(false);
        table_disciplina.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(table_disciplina);
        table_disciplina.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 12));
        table_disciplina.getTableHeader().setOpaque(false);
        table_disciplina.setRowHeight(20);
        if (table_disciplina.getColumnModel().getColumnCount() > 0) {
            table_disciplina.getColumnModel().getColumn(0).setPreferredWidth(60);
            table_disciplina.getColumnModel().getColumn(2).setPreferredWidth(30);
            table_disciplina.getColumnModel().getColumn(3).setPreferredWidth(60);
        }

        jScrollPane5.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        table_desempenho.setFont(new java.awt.Font("Segoe UI Semibold", 1, 10)); // NOI18N
        table_desempenho.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Artes", "", "", "", "", "", "", "", ""},
                {"Biologia", "", "", "", "", "", "", "", ""},
                {"Ed. Física", "", "", "", "", "", "", "", ""},
                {"Filosofia", "", "", "", "", "", "", "", ""},
                {"Física", "", "", "", "", "", "", "", ""},
                {"Geografia", "", "", "", "", "", "", "", ""},
                {"História", "", "", "", "", "", "", "", ""},
                {"Inglês", "", "", "", "", "", "", "", ""},
                {"Literatura", "", "", "", "", "", "", "", ""},
                {"Mat", "", "", "", "", "", "", "", ""},
                {"Português", "", "", "", "", "", "", "", ""},
                {"Química", "", "", "", "", "", "", "", ""},
                {"Sociologia", "", "", "", "", "", "", "", ""}
            },
            new String [] {
                "", "1º Tri", "F", "2º Tri", "F", "3º Tri", "F", "Avaliação Final", "F"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_desempenho.setToolTipText("");
        table_desempenho.setFocusable(false);
        table_desempenho.setGridColor(new java.awt.Color(0, 0, 0));
        table_desempenho.setIntercellSpacing(new java.awt.Dimension(0, 0));
        table_desempenho.setPreferredSize(new java.awt.Dimension(278, 287));
        table_desempenho.setRowHeight(18);
        table_desempenho.setSelectionBackground(new java.awt.Color(232, 180, 88));
        table_desempenho.setShowGrid(true);
        table_desempenho.setShowHorizontalLines(false);
        table_desempenho.getTableHeader().setReorderingAllowed(false);
        table_desempenho.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_desempenhoMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(table_desempenho);
        table_desempenho.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 12));
        table_desempenho.getTableHeader().setOpaque(false);
        table_desempenho.setRowHeight(18);
        if (table_desempenho.getColumnModel().getColumnCount() > 0) {
            table_desempenho.getColumnModel().getColumn(0).setPreferredWidth(40);
            table_desempenho.getColumnModel().getColumn(1).setPreferredWidth(50);
            table_desempenho.getColumnModel().getColumn(2).setPreferredWidth(30);
            table_desempenho.getColumnModel().getColumn(3).setPreferredWidth(50);
            table_desempenho.getColumnModel().getColumn(4).setPreferredWidth(30);
            table_desempenho.getColumnModel().getColumn(5).setPreferredWidth(50);
            table_desempenho.getColumnModel().getColumn(6).setPreferredWidth(30);
            table_desempenho.getColumnModel().getColumn(7).setPreferredWidth(60);
            table_desempenho.getColumnModel().getColumn(8).setPreferredWidth(30);
        }

        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Boletim");

        combo_trimestre.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1º Tri", "2º Tri", "3º Tri"}));
        combo_trimestre.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combo_trimestreItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout tab_inicioLayout = new javax.swing.GroupLayout(tab_inicio);
        tab_inicio.setLayout(tab_inicioLayout);
        tab_inicioLayout.setHorizontalGroup(
            tab_inicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab_inicioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tab_inicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 570, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(tab_inicioLayout.createSequentialGroup()
                        .addComponent(combo_trimestre, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        tab_inicioLayout.setVerticalGroup(
            tab_inicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tab_inicioLayout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(combo_trimestre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tab_inicio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tab_inicio, javax.swing.GroupLayout.DEFAULT_SIZE, 453, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void table_desempenhoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_desempenhoMouseClicked
        if(table_desempenho.getSelectedRow() == 0) 
        {
            try {
                fillDisciplina(1, LoginSessionAlunos.idEstudante, combo_trimestre.getSelectedIndex() + 1);
            } catch (SQLException ex) {
                Logger.getLogger(page_desempenho.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        else 
        {
            try {
                fillDisciplina(table_desempenho.getSelectedRow() + 1, LoginSessionAlunos.idEstudante, combo_trimestre.getSelectedIndex() + 1);
            } catch (SQLException ex) {
                Logger.getLogger(page_desempenho.class.getName()).log(Level.SEVERE, null, ex);
            }           
        }
    }//GEN-LAST:event_table_desempenhoMouseClicked

    private void combo_trimestreItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combo_trimestreItemStateChanged
        try {
            fillDisciplina(table_desempenho.getSelectedRow() + 1, LoginSessionAlunos.idEstudante, combo_trimestre.getSelectedIndex() + 1);
        } catch (SQLException ex) {
            Logger.getLogger(page_desempenho.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_combo_trimestreItemStateChanged
    
    private static boolean isSQLSet = false;
    private static Connection connection;
    
    private static Connection createConnection() throws SQLException {
        if(isSQLSet) {
            return connection;
        }
        //String username = JOptionPane.showInputDialog("Insira o usuário do banco de dados.");
        //String password = JOptionPane.showInputDialog("Insira a senha do banco de dados.");
        
        String username = "root";
        String password = "inserida";
        
        String url = "jdbc:mysql://localhost/appescola";
        isSQLSet = true;
        connection = DriverManager.getConnection(url, username, password);
        return connection;
    }
    
    private void getBoletim(String disciplina, int idEstudante, int row) throws SQLException 
    {
        connection = createConnection();
        Statement stMedia1 = connection.createStatement();
        Statement stMedia2 = connection.createStatement();
        Statement stMedia3 = connection.createStatement();
        Statement stMediaFinal = connection.createStatement();
        
        Statement stFaltas1 = connection.createStatement();
        Statement stFaltas2 = connection.createStatement();
        Statement stFaltas3 = connection.createStatement();
        Statement stFaltasFinal = connection.createStatement();
           
        ResultSet media1 = stMedia1.executeQuery("SELECT ROUND(AVG(nota)) AS medias1 FROM nota where disciplinaNota = '" + disciplina + "' and trimestre = 1 and tipoNota != 'Recuperação' and idEstudante = " + idEstudante);
        ResultSet media2 = stMedia2.executeQuery("SELECT ROUND(AVG(nota)) AS medias2 FROM nota where disciplinaNota = '" + disciplina + "' and trimestre = 2 and tipoNota != 'Recuperação' and idEstudante = " + idEstudante);
        ResultSet media3 = stMedia3.executeQuery("SELECT ROUND(AVG(nota)) AS medias3 FROM nota where disciplinaNota = '" + disciplina + "' and trimestre = 3 and tipoNota != 'Recuperação' and idEstudante = " + idEstudante);
        ResultSet mediaFinal = stMediaFinal.executeQuery("SELECT ROUND(AVG(nota)) AS mediaFinal FROM nota where disciplinaNota = '" + disciplina + "' and tipoNota != 'Recuperação' and idEstudante = " + idEstudante);
        
        ResultSet faltas1 = stFaltas1.executeQuery("SELECT COUNT(idFalta) AS faltas1 FROM faltas WHERE disciplinaFalta = '" + disciplina + "' and idEstudante = " + idEstudante + " and trimestre = 1");
        ResultSet faltas2 = stFaltas2.executeQuery("SELECT COUNT(idFalta) AS faltas2 FROM faltas WHERE disciplinaFalta = '" + disciplina + "' and idEstudante = " + idEstudante + " and trimestre = 2");
        ResultSet faltas3 = stFaltas3.executeQuery("SELECT COUNT(idFalta) AS faltas3 FROM faltas WHERE disciplinaFalta = '" + disciplina + "' and idEstudante = " + idEstudante + " and trimestre = 3");
        ResultSet faltasFinal = stFaltasFinal.executeQuery("SELECT count(idFalta) AS faltasFinal FROM faltas WHERE disciplinaFalta = '" + disciplina + "' and idEstudante = " + idEstudante);
        
        media1.next();
        media2.next();
        media3.next();
        mediaFinal.next();
        
        faltas1.next();
        faltas2.next();
        faltas3.next();
        faltasFinal.next();
        
        String valueFaltas1 = faltas1.getString("faltas1");
        String valueFaltas2 = faltas2.getString("faltas2");
        String valueFaltas3 = faltas3.getString("faltas3");
        String valueFaltasFinal = faltasFinal.getString("faltasFinal");
        
        String valueMedia = media1.getString("medias1");
        String valueMedia2 = media2.getString("medias2");
        String valueMedia3 = media3.getString("medias3");
        String valueFinal = mediaFinal.getString("mediaFinal");
        
        model_desempenho.setValueAt(valueMedia, row, 1);
        model_desempenho.setValueAt(valueFaltas1, row, 2);
        
        model_desempenho.setValueAt(valueMedia2, row, 3);
        model_desempenho.setValueAt(valueFaltas2, row, 4);
        
        model_desempenho.setValueAt(valueMedia3, row, 5);
        model_desempenho.setValueAt(valueFaltas3, row, 6);
        
        model_desempenho.setValueAt(valueFinal, row, 7);
        model_desempenho.setValueAt(valueFaltasFinal, row, 8);
    }
    
    private void fillDesempenho() throws SQLException 
    {
        getBoletim("Artes", LoginSessionAlunos.idEstudante, 0);
        getBoletim("Biologia", LoginSessionAlunos.idEstudante, 1);
        getBoletim("Ed. Física", LoginSessionAlunos.idEstudante, 2);
        getBoletim("Filosofia", LoginSessionAlunos.idEstudante, 3);
        getBoletim("Física", LoginSessionAlunos.idEstudante, 4);
        getBoletim("Geografia", LoginSessionAlunos.idEstudante, 5);
        getBoletim("História", LoginSessionAlunos.idEstudante, 6);
        getBoletim("Inglês", LoginSessionAlunos.idEstudante, 7);
        getBoletim("Literatura", LoginSessionAlunos.idEstudante, 8);
        getBoletim("Mat", LoginSessionAlunos.idEstudante, 9);
        getBoletim("Português", LoginSessionAlunos.idEstudante, 10);
        getBoletim("Química", LoginSessionAlunos.idEstudante, 11);
        getBoletim("Sociologia", LoginSessionAlunos.idEstudante, 12);
    }
    
    
    private void fillDisciplina(int select_disciplina, int idEstudante, int trimestre) throws SQLException 
    {
        connection = createConnection();
        Statement statement = connection.createStatement();
        
        ResultSet notas = statement.executeQuery("SELECT * from nota where idEstudante = " + idEstudante + " and disciplinaNota = " + select_disciplina + " and trimestre = " + trimestre);

        model_disciplina.setRowCount(0);
        
        while(notas.next())
        {
            String disciplina = notas.getString("disciplinaNota");
            String tipo = notas.getString("tipoNota");
            String data = notas.getString("dataNota");
            double nota = notas.getDouble("nota");
            
            Object dadosNota[] = {disciplina, tipo, data, nota};  
            
            model_disciplina.addRow(dadosNota);
        } 
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> combo_trimestre;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JPanel tab_inicio;
    private javax.swing.JTable table_desempenho;
    private javax.swing.JTable table_disciplina;
    // End of variables declaration//GEN-END:variables
}
